What you did well:
- Your writeup of the initial performance profile is very detailed. In particular it was nice to see a discussion of the number of floating point operations certain functions require.
- We appreciated all the different OpenMP options you tried and how you discussed each of them in depth. We will look into using some of these options on our final version.
- Good job executing both strong and weak scaling studies, and nice analysis!
Suggestions for improvement:
- It doesn’t seem like you tried to improve the serial performance of the implementation you were using. For instance, vectorization is not discussed. An easy solution would be to use Professor Bindel’s C implementation and port your parallel improvements to it. It’s unclear how sizeable your parallel speedup was without being able to compared to a vectorized implementation.
- There are two obvious directions to consider for the final version:
  	- Domain decomposition. This should help you get better performance out of OpenMP.
	- Offloading to the Phi. As is you’re only using the main Xeon board, which has only 12 threads. If you offload to the Phi you’ll be able to take advantage of the board’s 60 cores, which should net you a speedup for larger board sizes.
